definitions:
  http.CreateSongRequest:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  model.PaginatedSongs:
    properties:
      count:
        type: integer
      current_page:
        type: integer
      data:
        $ref: '#/definitions/model.Song'
      has_next_page:
        type: boolean
      total_pages:
        type: integer
    type: object
  model.PaginatedSongs:
    properties:
      count:
        type: integer
      current_page:
        type: integer
      data: {}
      has_next_page:
        type: boolean
      total_pages:
        type: integer
    type: object
  model.Song:
    properties:
      created_at:
        type: string
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      lyrics:
        items:
          type: string
        type: array
      release_date:
        type: string
      song:
        type: string
      updated_at:
        type: string
    type: object
  utils.ErrorResponse:
    properties:
      error:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/songs:
    get:
      description: Получить список песен с возможностью фильтрации и пагинации
      parameters:
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 40
        description: Размер страницы
        in: query
        name: size
        type: integer
      - description: Фильтр по имени группы
        in: query
        name: group
        type: string
      - description: Фильтр по названию песни
        in: query
        name: song
        type: string
      - description: Фильтр по дате релиза
        in: query
        name: release_date
        type: string
      - description: Фильтр по дате релиза (минимальная)
        in: query
        name: min_release_date
        type: string
      - description: Фильтр по дате релиза (максимальная)
        in: query
        name: release_date
        type: string
      responses:
        "200":
          description: Список песен с пагинацией
          schema:
            $ref: '#/definitions/model.PaginatedSongs'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Список песен
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Добавить новую песню
      parameters:
      - description: Данные новой песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/http.CreateSongRequest'
      responses:
        "200":
          description: ID добавленной песни
          schema:
            type: integer
        "400":
          description: Ошибка валидации или декодирования запроса
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "409":
          description: Песня уже существует
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Добавить новую песню
      tags:
      - songs
  /api/songs/{id}:
    delete:
      description: Удалить существующую песню по ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Песня успешно удалена
          schema:
            type: string
        "400":
          description: Некорректный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Песня не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить песню
      tags:
      - songs
    get:
      description: Получить информацию о песне и её тексте(пагинация)
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Номер куплета для пагинации текста песни
        in: query
        name: page
        type: integer
      - default: 40
        description: Размер куплета для пагинации текста песни
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: Детали песни с пагинированным текстом
          schema:
            $ref: '#/definitions/model.PaginatedSongs'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Получить песню по ID
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Обновить существующую песню по ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Обновленные данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/model.Song'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Ошибка валидации или декодирования запроса
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Песня не найдена
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Обновить информацию о песне
      tags:
      - songs
swagger: "2.0"
